# Default config for sway
# Read `man 5 sway` for a complete reference.

### Variables
#
# Config dir
set $config ~/.config/sway
# Logo key
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Preferred terminal emulator
set $term kitty
# Preferred application launcher
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu-font "Fira Code SemiBold 9"
#set $menu-highlight ""
#set $menu-title ""
set $menu bemenu-run -p "â–¶" | xargs swaymsg exec
# Preferred browser
set $browser firefox-developer-edition
# Preferred text editor
set $texteditor nvim

### Styling
#
# Font
font Fira Code SemiBold 9
# Borders
default_border pixel 5
default_floating_border pixel 1
# Gaps
gaps inner 20
gaps outer 10
gaps top 0
# Floating window sizes
#floating_minimum_size 800 x 520
#floating_maximum_size 1600 x 800
# Color configuration (Base16 variables)
include colorscheme
# Property Name         Border  BG      Text    Indicator Child Border
client.focused          $base05 $base0D $base00 $base0C $base0D
client.focused_inactive $base01 $base01 $base05 $base03 $base01
client.unfocused        $base01 $base00 $base05 $base01 $base01
client.urgent           $base08 $base08 $base00 $base08 $base08
client.placeholder      $base00 $base00 $base05 $base00 $base00
client.background       $base07

### Output configuration (swaymsg -t get_outputs)
#
# Wallpaper
output * bg ~/.config/wallpaper.png fill
#exec swaybg -i ~/Pictures/Wallpapers/wallpaper.png -m fill -o HDMI-A-1
# Outputs
output HDMI-A-1 pos 0 0 res 1920x1080
#output HDMI-A-2 pos 1920 0 res 1360x768
# Focus primary output
#exec swaymsg focus output HDMI-A-1
# Bind workspaces to monitors
#set $output-primary HDMI-A-1
#set $output-secondary HDMI-A-2
#workspace 1 output $output-primary
#workspace 2 output $output-primary
#workspace 9 output $output-secondary
#workspace 10 output $output-secondary

### Idle configuration
#
    # Lock screen after X seconds of inactivity
    # Turn off displays after X seconds of inactivity
    # Turn the displays back on when resumed
    # Lock screen before computer goes to sleep
exec swayidle \
    timeout 3000 'swaylock -i ~/.config/lockscreen.png --scaling fill' \
    timeout 6000 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -i ~/.config/lockscreen.png --scaling fill'

### Input configuration (swaymsg -t get_inputs, man 5 sway-input)
#
# Keyboard
input 9456:320:Metadot_-_Das_Keyboard_Das_Keyboard {
    xkb_model pc105
    xkb_layout us,es
    xkb_variant ,
    xkb_numlock enabled
    xkb_options grp:alt_shift_toggle,ctrl:nocaps
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+grave workspace home
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+grave move container to workspace home
    # Note: workspaces can have any name you want, not just numbers.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10 px or 10 ppt
    bindsym $down resize grow height 10 px or 10 ppt
    bindsym $up resize shrink height 10 px or 10 ppt
    bindsym $right resize grow width 10 px or 10 ppt

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # Get optimal size for floating windows
    bindsym o resize set 800 520

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Multimedia and Special Keys:
#
    #Volume up
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
    #Volume down
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
    #Volume mute
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    #Play/Pause
    bindsym XF86AudioPlay exec playerctl play-pause
    #Next track
    bindsym XF86AudioNext exec playerctl next
    #Previous track
    bindsym XF86AudioPrev exec playerctl previous
    # Sleep
    bindsym XF86Sleep exec systemctl sleep
#
# Custom bindings:
#
    # Scratchpad terminal
    bindsym $mod+o exec kitty -T "scratchterm"
    # Take screenshot
    bindsym Print exec screenshot # ~/bin/screenshot
    # Take screenshot of area
    bindsym Shift+Print exec screenshot_area # ~/bin/screenshot_area
    # Start a browser
    bindsym $mod+i exec $browser
    # Start a text editor
    bindsym $mod+t exec $term sh -c "$texteditor"
    # Password manager
    bindsym $mod+p exec passmenu -p "Select account"
    # Lock screen
    bindsym $mod+Shift+q exec swaylock -i ~/.config/lockscreen.png --scaling fill
    # Color picker
    #bindsym $mod+c exec colorpicker # ~/bin/colorpicker
    # Start spotifyd
    bindsym $mod+m exec $term sh -c launchspt # "~/bin/launchspt"
    # Display window title
    #bindsym $mod+t border toggle
#
# Swayr bindings
#
    bindsym $mod+z exec env RUST_BACKTRACE=1 \
        swayr switch-window >> /tmp/swayr.log 2>&1

    bindsym $mod+x exec env RUST_BACKTRACE=1 \
        swayr quit-window > /tmp/swayr.log 2>&1

    bindsym $mod+Tab exec env RUST_BACKTRACE=1 \
        swayr switch-to-urgent-or-lru-window >> /tmp/swayr.log 2>&1

    bindsym $mod+Next exec env RUST_BACKTRACE=1 \
        swayr next-window >> /tmp/swayr.log 2>&2

    bindsym $mod+Prior exec env RUST_BACKTRACE=1 \
        swayr prev-window >> /tmp/swayr.log 2>&2

    bindsym $mod+Shift+z exec env RUST_BACKTRACE=1 \
        swayr switch-workspace-or-window >> /tmp/swayr.log 2>&1

    bindsym $mod+period exec env RUST_BACKTRACE=1 \
        swayr execute-swaymsg-command >> /tmp/swayr.log 2>&1

    bindsym $mod+Shift+period exec env RUST_BACKTRACE=1 \
      swayr execute-swayr-command >> /tmp/swayr.log 2>&1

### Start up configuration
#
# Start scratchpad terminal
for_window [title="scratchterm"] move container to scratchpad, scratchpad show
# Execute specific programs in floating mode
for_window [title="Visualization Toolkit - OpenGL"] floating enable
for_window [title="Figure 1"] floating enable
for_window [title="Figure 2"] floating enable
for_window [title="Figure 3"] floating enable
for_window [title="vCoolor"] floating enable
for_window [class="XaoS"] floating enable
for_window [class="jetbrains-pycharm-ce"] floating_minimum_size 800 x 650

#### Status Bar (man 5 sway-bar)
##
#bar {
#    swaybar_command waybar
#}

include /etc/sway/config.d/*

exec waybar

exec env RUST_BACKTRACE=1 swayrd > /tmp/swayrd.log 2>&1

#exec $config/startup.zsh $config
